{"version":3,"sources":["panels/Home.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","Fragment","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","Place","onIncrementPosition","onDecrementPosition","price","useMemo","foodIds","Set","foods","result","values","filter","value","has","reduce","count","parseInt","accounting","formatNumber","console","log","food","composition","onClick","itemId","areaId","e","preventDefault","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","orderOptions","onDeliveryChanged","timeInitialState","selfServiceInitialState","fasterInitialState","undefined","time","faster","selfService","useState","setTime","setFaster","setSelfService","products","onFocus","event","target","onBlur","Order","history","setActiveOrder","setTimeout","push","Orders","orderStatuses","setCanceledOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","finishedOrders","refresh","setFinishedOrder","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","JSON","parse","localStorage","getItem","setOrderStatuses","setOrder","setOrderOptions","path","exact","nextStatuses","setItem","stringify","updatedOrderOptions","serialized","render","routeProps","location","pathname","updatedOrder","nextOrderStatuses","status","connect","send","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e03dd665.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './Home.css';\n\nconst Home = ({ foodAreas, order }) => (\n  <React.Fragment>\n    <ul className=\"Home\">\n      {foodAreas.map((area) => (\n        <li\n          key={area.id}\n        >\n          <div className=\"Home__fixed-content\">\n            <header className=\"Home__header\">\n              <h1 className=\"Home__head\">\n                <Link to=\"/\" className=\"Home__logo\">\n                  {area.name}\n                </Link>\n              </h1>\n              <Link to=\"/\" className=\"Home__change-tz\">\n                <img\n                  className=\"Home__edit\"\n                  alt=\"change-profile\"\n                  src={edit}\n                />\n              </Link>\n            </header>\n            <ul className=\"Home__tabs\">\n              <li className=\"Home__tab Home__tab_active\">\n                Еда\n              </li>\n              {/* <li className=\"Home__tab Home__tab_disabled\">\n                Развлечения\n              </li>\n              <li className=\"Home__tab Home__tab_disabled\">\n                Здоровье\n              </li> */}\n            </ul>\n          </div>\n          <ul className=\"Home__items\">\n            {area.items.map(item => (\n              <li\n                className=\"Home__item\"\n                key={item.id}\n              >\n                <Link\n                  className=\"Home__food-link\"\n                  to={item.link}\n                >\n                  <img\n                    alt={item.name}\n                    className=\"Home__image\"\n                    src={item.image}\n                  />\n                  <h3 className=\"Home__food-name\">\n                    {item.name}\n                  </h3>\n                  <p className=\"Home__food-type\">{item.description}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n    {Object.keys(order).length !== 0 && (\n      <footer className=\"Footer\">\n        <Link to=\"/orders\" className=\"Footer__orders\">\n\t\t\t\t\tМои заказы\n        </Link>\n      </footer>\n    )}\n  </React.Fragment>\n);\n\nHome.propTypes = {\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  })),\n};\n\nHome.defaultProps = {\n  foodAreas: [],\n};\n\nexport default Home;\n","import React, {useMemo} from 'react';\nimport {Link} from 'react-router-dom';\nimport accounting from 'accounting';\n// import PropTypes from 'prop-types';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Place = ({item, order, onIncrementPosition, onDecrementPosition, area}) => {\n    const price = useMemo(() => {\n        const foodIds = new Set((item.foods || []).map(item => item.id));\n\n        const result = Object.values(order)\n            .filter((value) => {\n                const {item: {id}} = value;\n\n                return foodIds.has(id);\n            })\n            .reduce((result, value) => {\n                const {count, item: {price}} = value;\n\n                return result + parseInt(price) * parseInt(count);\n            }, 0);\n\n        return accounting.formatNumber(result, 0, ' ');\n    }, [order, item]);\n    console.log(order, item)\n    return (\n        <div className=\"Place\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img\n                            alt=\"change-profile\"\n                            src={edit}\n                        />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2\n                    className=\"Place__restoraunt-name\"\n                >\n                    {item.name}\n                </h2>\n                <p className=\"Place__restoraunt-type\">\n                    {item.description}\n                </p>\n            </aside>\n            <ul className=\"Place__foods\">\n                {item.foods.map((food => (\n                    <li\n                        className=\"Place__food\"\n                        key={food.id}\n                    >\n                        <div className=\"Place__food-logo-wrapper\">\n                            <img\n                                alt=\"food logo\"\n                                className=\"Place__food-logo\"\n                                src={food.image}\n                            />\n                        </div>\n                        <h3 className=\"Place__food-name\">\n                            {food.name}\n                        </h3>\n                        <p className=\"Place__food-composition\">\n                            {food.composition}\n                        </p>\n                        <div className=\"Place__food-price\">\n                            <span className=\".Place__food-price-price\">Цена: {food.price}&nbsp;&nbsp;</span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onDecrementPosition({id: food.id, itemId: item.id, areaId: area.id});\n                                }}\n                            >\n                                -\n                            </button>\n                            <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onIncrementPosition({id: food.id, itemId: item.id, areaId: area.id});\n                                }}\n                            >\n                                +\n                            </button>\n                        </div>\n                    </li>\n                )))}\n            </ul>\n            <footer className=\"Place__footer\">\n                <Link to={`/basket/${area.id}/${item.id}`} className=\"Place__order\"\n                      onClick={e => !Object.values(order).length && e.preventDefault()}>\n                    Оформить заказ ({price})\n                </Link>\n            </footer>\n        </div>\n    );\n};\n\nPlace.defaultProps = {\n    item: {},\n    onIncrementPosition: () => {\n    },\n    onDecrementPosition: () => {\n    },\n};\n\nexport default Place;\n","import React from 'react';\n\nimport './Checkbox.css';\nimport Check from '../img/check-symbol.svg';\n\n\nconst Checkbox = ({ checked, onToggle }) => {\n  return (\n    <div className=\"Checkbox\">\n      <input\n        checked={checked}\n        onChange={onToggle}\n        type=\"checkbox\"\n      />\n      <img\n        alt=\"custom checkbox logo\"\n        src={Check}\n      />\n    </div>\n  );\n};\n\nCheckbox.defaultProps = {\n  onToggle: () => {},\n};\n\nexport default Checkbox;\n","import React, {useMemo, useState} from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport accounting from 'accounting';\n\nimport Checkbox from './Checkbox';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Basket = ({match: {params: {areaId, itemId}}, foodAreas, order, orderOptions, onDeliveryChanged}) => {\n    let timeInitialState = '';\n    let selfServiceInitialState = false;\n    let fasterInitialState = true;\n    if (orderOptions[areaId] && orderOptions[areaId][itemId]) {\n        if (orderOptions[areaId][itemId].time !== undefined) {\n            timeInitialState = orderOptions[areaId][itemId].time;\n        }\n        if (orderOptions[areaId][itemId].faster !== undefined) {\n            fasterInitialState = orderOptions[areaId][itemId].faster;\n        }\n        if (orderOptions[areaId][itemId].selfService !== undefined) {\n            selfServiceInitialState = orderOptions[areaId][itemId].selfService;\n        }\n    }\n    console.log(fasterInitialState)\n    const [time, setTime] = useState(timeInitialState);\n    const [faster, setFaster] = useState(fasterInitialState);\n    const [selfService, setSelfService] = useState(selfServiceInitialState);\n    const area = foodAreas.filter(area => area.id === areaId)[0];\n    const item = area.items.filter(item => item.id === itemId)[0];\n    const [price, products] = useMemo(() => {\n        const foodIds = new Set((item.foods || []).map(item => item.id));\n\n        const products = Object.values(order)\n            .filter((value) => {\n                const {item: {id}} = value;\n\n                return foodIds.has(id);\n            });\n\n        const result = products.reduce((result, value) => {\n            const {count, item} = value;\n\n            return result + parseInt(item.price) * parseInt(count);\n        }, 0);\n\n        return [accounting.formatNumber(result, 0, ' '), products];\n    }, [order, item]);\n\n    return (\n        <div className=\"Place\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img\n                            alt=\"change-profile\"\n                            src={edit}\n                        />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2\n                    className=\"Place__restoraunt-name\"\n                >\n                    {item.name}\n                </h2>\n                <p className=\"Place__restoraunt-type\">\n                    {item.description}\n                </p>\n            </aside>\n            <div className=\"Place__products-wrapper\">\n                <ul className=\"Place__products\">\n                    {products.map(({item, count}) => (\n                        <li\n                            className=\"Place__product\"\n                            key={item.id}\n                        >\n                            <img\n                                className=\"Place__product-logo\"\n                                alt=\"Ordered product logo\"\n                                src={item.image}\n                            />\n                            <h3\n                                className=\"Place__product-name\"\n                            >\n                                {item.name}\n                            </h3>\n                            <p\n                                className=\"Place__product-price\"\n                            >\n                                Цена: {item.price}\n                            </p>\n                            <p\n                                className=\"Place__product-count\"\n                            >\n                                x{count}\n                            </p>\n                        </li>\n                    ))}\n                </ul>\n                <Link\n                    className=\"Place__change-product\"\n                    to={`/place/${areaId}/${itemId}`}\n                >\n                    Изменить\n                </Link>\n            </div>\n            <div className=\"Place__choice\">\n                <h3>Время:</h3>\n                <div className=\"Place__choice-item\">\n                    <span>Как можно быстрее</span>\n                    <Checkbox\n                        checked={faster}\n                        onToggle={() => {\n                            if (faster) {\n                                setFaster(false);\n                                onDeliveryChanged({areaId, itemId, faster: false});\n                            } else {\n                                onDeliveryChanged({areaId, itemId, time: '', faster: true});\n                                setTime('');\n                                setFaster(true);\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"Place__choice-item\">\n                    <span>Назначить</span>\n                    <input\n                        type=\"time\"\n                        value={time}\n                        onFocus={() => {\n                            setFaster(false);\n                            onDeliveryChanged({areaId, itemId, faster: false});\n                        }}\n                        onChange={event => {\n                            setFaster(false);\n\n                            onDeliveryChanged({areaId, itemId, time: event.target.value, faster: false});\n                            setTime(event.target.value);\n                        }}\n                        onBlur={() => {\n                            if (time) {\n                                setFaster(false);\n                                onDeliveryChanged({areaId, itemId, faster: false});\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"Place__choice-item\">\n                    <h3>С собой</h3>\n                    <Checkbox checked={selfService} onToggle={() => {\n                        onDeliveryChanged({areaId, itemId, selfService: !selfService});\n                        setSelfService(!selfService)\n\n                    }}/>\n                </div>\n                <div className=\"Place__choice-item\">\n                    <h3>На месте</h3>\n                    <Checkbox checked={!selfService} onToggle={() => {\n                        onDeliveryChanged({areaId, itemId, selfService: !selfService});\n                        setSelfService(!selfService)\n\n                    }}/>\n                </div>\n            </div>\n            <footer className=\"Place__footer\">\n                <Link to={`/order/${area.id}/${item.id}`} className=\"Place__order\">\n                    Оплатить {price}\n                </Link>\n            </footer>\n        </div>\n    );\n};\n\nexport default withRouter(Basket);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Order = ({ match: { params: { areaId, itemId }}, history, foodAreas, setActiveOrder }) => {\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  return (\n    <div className=\"Place Place_order\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__order-body\">\n        <h3 className=\"Place__order-number-header\">\n          Номер вашего заказа\n        </h3>\n        <main className=\"Place__order-number\">\n          7\n        </main>\n        <p className=\"Place__order-number-header\">\n          Заказ будет готов через\n        </p>\n        <h3 className=\"Place__order-time\">\n          ~ 15 минут\n        </h3>\n      </div>\n      <footer className=\"Place__footer\">\n        <div \n          to=\"/orders\" \n          className=\"Place__order\"\n          onClick={() => {\n            setActiveOrder({ itemId });\n\n            setTimeout(() => {\n              history.push('/orders');\n            }, 0);\n          }}\n        >\n          Мои заказы\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nOrder.defaultProps = {\n  setActiveOrder: () => {},\n};\n\nexport default withRouter(Order);\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport refresh from '../img/refresh-button.svg';\nimport './orders.css';\n\n\nconst Orders = ({ order, orderStatuses, foodAreas, setCanceledOrder, setActiveOrder }) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n      .map(shopId => shopId);\n\n    console.log(foodAreas)\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n  console.log(foodAreas)\n  return (\n    <div className=\"Orders\">\n      <ul className=\"Orders__active-orders\">\n        {activeOrders.map(order => (\n          <li\n            className=\"Orders__active-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name\">{order.shopName}</p>\n              <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <div className=\"Orders__time\">\n              ~ 15 М\n            </div>\n            <Link\n              className=\"Orders__change\"\n              to={`/place/${order.placeId}/${order.shopId}`}\n            >\n              Изм\n            </Link>\n            <button\n              className=\"Orders__cancel\"\n              onClick={() => {\n                setCanceledOrder({ itemId: order.shopId });\n              }}\n            >\n              Отм.\n            </button>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"Orders__finished-orders\">\n        {finishedOrders.map(order => (\n          <li\n            className=\"Orders__finished-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n              <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <button\n              className=\"Orders__repeat\"\n              onClick={() => {\n                setActiveOrder({ itemId: order.shopId });\n              }}\n            >\n              <img\n                className=\"Orders__refresh\"\n                alt=\"repeat order\"\n                src={refresh}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {},\n};\n\nexport default Orders;\n","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Home from './panels/Home';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\n\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\n\n\nconst FOOD_AREAS = [{\n    id: 'pizikiva-gallery',\n    name: 'ТРЦ \"Им.Пыжикова\"',\n    items: [{\n        id: 'kfc',\n        name: 'KFC',\n        link: '/place/pizikiva-gallery/kfc',\n        description: 'Сеть ресторанов быстрого питания',\n        image: kfc,\n        foods: [{\n            id: 'classic',\n            image: FourTowar,\n            name: 'Классик',\n            price: 150,\n        }, {\n            id: 'FrenchFries',\n            image: OneTowar,\n            name: 'Картофель фри',\n            price: 50,\n        }],\n    }, {\n        id: 'burger-king',\n        name: 'Burger King',\n        link: '/place/pizikiva-gallery/burger-king',\n        description: 'Сеть ресторанов быстрого питания',\n        image: burger,\n        foods: [{\n            id: 'OneTowar',\n            name: 'Товар № 1',\n            composition: 'Состав: по ГОСТу',\n            price: 630,\n            image: OneTowar,\n        }, {\n            id: 'TwoTowar',\n            name: 'Товар № 2',\n            composition: 'Состав: по ГОСТу',\n            price: 450,\n            image: TwoTowar,\n        }, {\n            id: 'ThreeTowar',\n            name: 'Товар № 3',\n            composition: 'Состав: по ГОСТу',\n            price: 800,\n            image: ThreeTowar,\n        }, {\n            id: 'FourthTowar',\n            name: 'Товар № 4',\n            composition: 'Состав по ГОСТу',\n            price: 600,\n            image: FourTowar,\n        }],\n    }, {\n        id: 'macdac',\n        name: 'McDonal\\'s',\n        link: '/place/pizikiva-gallery/macdac',\n        description: 'Сеть ресторанов быстрого питания',\n        image: mcdac,\n        foods: [{\n            id: 'hamburger',\n            image: TwoTowar,\n            name: 'Гамбургер',\n            price: 50,\n        }, {\n            id: 'bigmac',\n            image: ThreeTowar,\n            name: 'Биг мак',\n            price: 200,\n        }],\n    }, {\n        id: 'subway',\n        name: 'SubWay',\n        link: '/place/pizikiva-gallery/subway',\n        image: sub,\n        description: 'Сеть ресторанов быстрого питания',\n        foods: [{\n            id: 'melt-sub',\n            image: ThreeTowar,\n            name: 'Сабвей мелт',\n            price: 300,\n        }, {\n            id: 'day-sub',\n            image: OneTowar,\n            name: 'Саб дня',\n            price: 200,\n        }],\n    }],\n}];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n    area.items.forEach(item => {\n        result[item.link] = item;\n    });\n\n    return result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n    area.items.forEach(item => {\n        item.foods.forEach(food => {\n            result[food.id] = food;\n        });\n    });\n\n    return result;\n}, {});\n\nconst App = () => {\n    const [orderStatuses, setOrderStatuses] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {});\n    const [order, setOrder] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {});\n    const [orderOptions, setOrderOptions] =\n        useState(JSON.parse((localStorage.getItem('ordersOptions') || 'null')) || {});\n\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home foodAreas={FOOD_AREAS} order={order}/>\n                </Route>\n                <Route path=\"/order/:areaId/:itemId\" exact>\n                    <Order\n                        foodAreas={FOOD_AREAS}\n                        order={order}\n                        setActiveOrder={({itemId}) => {\n                            const nextStatuses = {...orderStatuses};\n\n                            nextStatuses[itemId] = 'ACTIVE';\n\n                            setOrderStatuses(nextStatuses);\n                            localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n                        }}\n                    />\n                </Route>\n                <Route path=\"/basket/:areaId/:itemId\" exact>\n                    <Basket\n                        foodAreas={FOOD_AREAS}\n                        order={order}\n                        orderOptions={orderOptions}\n                        onDeliveryChanged={({itemId, areaId, time, selfService, faster}) => {\n                            const updatedOrderOptions = {...orderOptions};\n                            if (!updatedOrderOptions[areaId])\n                                updatedOrderOptions[areaId] = {};\n                            if (!updatedOrderOptions[areaId][itemId]) updatedOrderOptions[areaId][itemId] = {};\n                            if (time === undefined)\n                                time = updatedOrderOptions[areaId][itemId].time ?\n                                    updatedOrderOptions[areaId][itemId].time : '';\n                            if (selfService === undefined)\n                                selfService = updatedOrderOptions[areaId][itemId].selfService ?\n                                    updatedOrderOptions[areaId][itemId].selfService : false;\n                            if (faster === undefined)\n                                faster = updatedOrderOptions[areaId][itemId].faster ?\n                                    updatedOrderOptions[areaId][itemId].faster : true;\n\n                            updatedOrderOptions[areaId][itemId] = {\n                                time,\n                                selfService,\n                                faster\n                            };\n\n\n                            const serialized = JSON.stringify(updatedOrderOptions);\n\n                            localStorage.setItem('ordersOptions', serialized);\n                            // localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n                            setOrderOptions(updatedOrderOptions);\n                            // setOrderStatuses(nextOrderStatuses);\n                        }}\n                    />\n                </Route>\n                <Route\n                    path=\"/orders\"\n                    exact\n                >\n                    <Orders\n                        order={order}\n                        orderStatuses={orderStatuses}\n                        foodAreas={FOOD_AREAS}\n                        // setFinishedOrder={({ itemId }) => {\n                        // \tconst nextStatuses = {...orderStatuses};\n                        //\n                        // \tnextStatuses[itemId] = 'DONE';\n                        //\n                        // \tsetOrderStatuses(nextStatuses);\n                        // \tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n                        // }}\n                        setActiveOrder={({itemId}) => {\n                            const nextStatuses = {...orderStatuses};\n\n                            nextStatuses[itemId] = 'ACTIVE';\n\n                            setOrderStatuses(nextStatuses);\n                            localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n                        }}\n                        setCanceledOrder={({itemId}) => {\n                            const nextStatuses = {...orderStatuses};\n\n                            nextStatuses[itemId] = 'CANCELED';\n\n                            setOrderStatuses(nextStatuses);\n                            localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n                        }}\n                    />\n                </Route>\n                <Route\n                    path=\"/place/:area/:place\"\n                    render={routeProps => {\n                        return (\n                            <Place\n                                {...routeProps}\n                                item={placesMap[routeProps.location.pathname]}\n                                area={FOOD_AREAS[0]}\n                                order={order}\n                                onIncrementPosition={({id, itemId, areaId}) => {\n                                    const updatedOrder = {...order};\n\n                                    if (id in updatedOrder) {\n                                        updatedOrder[id].count++;\n                                    } else {\n                                        updatedOrder[id] = {\n                                            item: foodsMap[id],\n                                            count: 1,\n                                        };\n                                    }\n\n                                    let nextOrderStatuses = {...orderStatuses};\n\n                                    if (Object.keys(nextOrderStatuses).length === 0) {\n                                        FOOD_AREAS.forEach(area => {\n                                            area.items.forEach(item => {\n                                                item.foods.forEach(food => {\n                                                    if (food.id in order) {\n                                                        const status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n                                                        nextOrderStatuses[item.id] = status;\n                                                    }\n                                                });\n                                            });\n                                        });\n                                    }\n\n                                    const serialized = JSON.stringify(updatedOrder);\n\n                                    localStorage.setItem('orders', serialized);\n                                    localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n                                    setOrder(updatedOrder);\n                                    setOrderStatuses(nextOrderStatuses);\n                                }}\n                                onDecrementPosition={({id, itemId, areaId}) => {\n                                    const updatedOrder = {...order};\n\n                                    if (id in updatedOrder) {\n                                        if (updatedOrder[id].count === 1) {\n                                            delete updatedOrder[id];\n                                        } else {\n                                            updatedOrder[id].count--;\n                                        }\n                                    }\n\n                                    let nextOrderStatuses = {...orderStatuses};\n\n                                    if (Object.keys(nextOrderStatuses).length === 0) {\n                                        FOOD_AREAS.forEach(area => {\n                                            area.items.forEach(item => {\n                                                item.foods.forEach(food => {\n                                                    if (food.id in order) {\n                                                        const status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n                                                        nextOrderStatuses[item.id] = status;\n                                                    }\n                                                });\n                                            });\n                                        });\n                                    }\n\n                                    const serialized = JSON.stringify(updatedOrder);\n\n                                    localStorage.setItem('orders', serialized);\n                                    localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n                                    setOrder(updatedOrder);\n                                    setOrderStatuses(nextOrderStatuses);\n                                }}\n\n                            />\n                        );\n                    }}\n                />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/edit.751f84c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.06277842.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.1198ed41.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}